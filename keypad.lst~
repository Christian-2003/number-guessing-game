keypad                                                                                                                  PAGE 1
                         1     ; ===========================================================================
                         2     ; Program reads a number (with multiple digits) from the matrix keypad and
                         3     ; and stores the result in address 30H.
                         4     ; ===========================================================================
                         5     ORG 0000
0000 0112                6     AJMP MAIN
                         7
                         8     ; Array stores keys for the matrix keypad
0002 31323341            9     KEYS:   DB '1', '2', '3', 'A'
0006 34353642           10             DB '4', '5', '6', 'B'
000A 37383943           11             DB '7', '8', '9', 'C'
000E 2A302344           12             DB '*', '0', '#', 'D'
                        13
                        14     ; Main program
                        15     MAIN:
0012 8000               16             SJMP READ_KEYPAD
                        17
                        18
                        19
                        20
                        21
                        22     ; ---------------------------------------------------------------------------
                        23     ; The following section begins reading a number from the keypad.
                        24     ; The read number is stored at address 30H.
                        25     ; Please make sure that matrix keypad is configured at port 0. Columns need
                        26     ; to be configured with bits 0 - 3 and rows with bits 4 - 7.
                        27     ; ---------------------------------------------------------------------------
                        28     READ_KEYPAD:
0014 7580FF             29             MOV P0, #0FFH           ; Set P0 as input for the matrix keypad
0017 900002             30             MOV DPTR, #KEYS         ; POINTER TO KEY VALUES
001A 7800               31             MOV R0, #0              ; Init pointer for rows
001C 7900               32             MOV R1, #0              ; Init pointer for coumns
001E 753000             33             MOV 30H, #0             ; Init read number in memory
0021 75F00A             34             MOV B, #10              ; Init multiplication factor for decimal places
                        35
                        36
                        37
                        38
                        39
                        40     ; ---------------------------------------------------------------------------
                        41     ; The following section checks in which row the pressed key is located.
                        42     ; IF a row is identified, the subprogram CHECK_COL is called.
                        43     ; IF no row is identified, the subprogram loops until one is detected.
                        44     ; ---------------------------------------------------------------------------
                        45     CHECK_ROW:
0024 7580F0             46             MOV P0, #0F0H
0027 30840B             47             JNB P0.4, ROW0
002A 30850C             48             JNB P0.5, ROW1
002D 30860D             49             JNB P0.6, ROW2
0030 30870E             50             JNB P0.7, ROW3
0033 80EF               51             SJMP CHECK_ROW          ; No row pressed. Loop.
                        52
                        53     ROW0:
0035 7800               54             MOV R0, #0
0037 800C               55             SJMP CHECK_COL
                        56
                        57     ROW1:
0039 7801               58             MOV R0, #1
003B 8008               59             SJMP CHECK_COL
                        60
                        61     ROW2:
003D 7802               62             MOV R0, #2
003F 8004               63             SJMP CHECK_COL
                        64
                        65     ROW3:
0041 7803               66             MOV R0, #3
0043 8000               67             SJMP CHECK_COL
                        68
                        69
                        70
                        71
                        72
                        73     ; ---------------------------------------------------------------------------
                        74     ; The following section checks in which column the pressed key is located.
                        75     ; IF a column is identified, the subprogram GET_KEY is called.
                        76     ; IF no column is identified, the subprogram CHECK_ROW is called.
                        77     ; ---------------------------------------------------------------------------
                        78     CHECK_COL:
0045 7580F0             79             MOV P0, #0F0H
0048 C280               80             CLR P0.0
004A 308019             81             JNB P0.0, COL0          ; Test whether key in column 1 is clicked.
004D D280               82             SETB P0.0
004F C281               83             CLR P0.1
0051 308116             84             JNB P0.1, COL1          ; Test whether key in column 2 is clicked.
0054 D281               85             SETB P0.1
0056 C282               86             CLR P0.2
0058 308213             87             JNB P0.2, COL2          ; Test whether key in column 3 is clicked.
005B D282               88             SETB P0.2
005D C283               89             CLR P0.3
005F 308310             90             JNB P0.3, COL3          ; Test whether key in column 4 is clicked.
0062 D283               91             SETB P0.3
0064 80BE               92             SJMP CHECK_ROW          ; No key clicked.
                        93
                        94     COL0:
0066 7900               95             MOV R1, #0              ; Remember that column 1 is clicked.
0068 800C               96             SJMP GET_KEY
                        97
                        98     COL1:
006A 7901               99             MOV R1, #1              ; Remember that column 1 is clicked.
006C 8008              100             SJMP GET_KEY
                       101
                       102     COL2:
006E 7902              103             MOV R1, #2              ; Remember that column 1 is clicked.
0070 8004              104             SJMP GET_KEY
                       105
                       106     COL3:
0072 7903              107             MOV R1, #3              ; Remember that column 1 is clicked.
0074 8000              108             SJMP GET_KEY
                       109
                       110
                       111
                       112
                       113
                       114     ; ---------------------------------------------------------------------------
                       115     ; The following section reads the digit from the matrix keypad and adds it to
                       116     ; the total number.
                       117     ; Afterwards, the program waits until the key is released to continue reading
                       118     ; the next digit by calling CHECK_ROW.
                       119     ; ---------------------------------------------------------------------------
                       120     GET_KEY:
0076 E8                121             MOV A, R0
0077 25E0              122             ADD A, A                ; A = R0 * 4
0079 25E0              123             ADD A, A                ; A = R0 * 4 * 4
007B 29                124             ADD A, R1               ; A = R0 * 4 + R1
007C 93                125             MOVC A, @A+DPTR         ; Get key value from #KEYS
007D FA                126             MOV R2, A               ; Save key value to R2
007E B43002            127             CJNE A, #'0', CONVERT_TO_NUM ; If key not '0', convert digit'
0081 8003              128             SJMP STORE_NUM          ; Number is '0', skip conversion
                       129
                       130     CONVERT_TO_NUM:
0083 9430              131             SUBB A, #'0'            ; Convert ASCII char to number
0085 FB                132             MOV R3, A               ; Save converted number to R3
                       133
                       134     STORE_NUM:
0086 E530              135             MOV A, 30H
0088 75F00A            136             MOV B, #10              ; Get multiplication factor
008B A4                137             MUL AB                  ; A * 10 (B is 10)
008C 2B                138             ADD A, R3               ; Add new digit
008D F530              139             MOV 30H, A
                       140
                       141     WAIT_KEY_RELEASE:
008F 7580F0            142             MOV P0, #0F0H
                       143
                       144     WAIT_RELEASE_LOOP:
0092 3084FD            145             JNB P0.4, WAIT_RELEASE_LOOP
0095 3085FA            146             JNB P0.5, WAIT_RELEASE_LOOP
0098 3086F7            147             JNB P0.6, WAIT_RELEASE_LOOP
009B 3087F4            148             JNB P0.7, WAIT_RELEASE_LOOP
009E 8084              149             SJMP CHECK_ROW          ; Read next digit
                       150
                       151     END
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CHECK_COL. . . . . . . . . . . . . .  C  ADDR  0045H
CHECK_ROW. . . . . . . . . . . . . .  C  ADDR  0024H
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
COL0 . . . . . . . . . . . . . . . .  C  ADDR  0066H
COL1 . . . . . . . . . . . . . . . .  C  ADDR  006AH
COL2 . . . . . . . . . . . . . . . .  C  ADDR  006EH
COL3 . . . . . . . . . . . . . . . .  C  ADDR  0072H
CONVERT_TO_NUM . . . . . . . . . . .  C  ADDR  0083H
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
GET_KEY. . . . . . . . . . . . . . .  C  ADDR  0076H
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
KEYS . . . . . . . . . . . . . . . .  C  ADDR  0002H
MAIN . . . . . . . . . . . . . . . .  C  ADDR  0012H
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H  NOT USED
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H  NOT USED
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H  NOT USED
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
READ_KEYPAD. . . . . . . . . . . . .  C  ADDR  0014H
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
ROW0 . . . . . . . . . . . . . . . .  C  ADDR  0035H
ROW1 . . . . . . . . . . . . . . . .  C  ADDR  0039H
ROW2 . . . . . . . . . . . . . . . .  C  ADDR  003DH
ROW3 . . . . . . . . . . . . . . . .  C  ADDR  0041H
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
STORE_NUM. . . . . . . . . . . . . .  C  ADDR  0086H
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WAIT_KEY_RELEASE . . . . . . . . . .  C  ADDR  008FH  NOT USED
WAIT_RELEASE_LOOP. . . . . . . . . .  C  ADDR  0092H
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED