guess                                                                                                                   PAGE 1
                         1     ; Number-Guessing Game for 8051 in Assembly
****ERROR:Invalidexpression`($-LCD_INIT_CMDS)'
****ERROR:Valueof`$'isunknownatthispoint
                         2     ; Assumes a standard 8051 microcontroller with UART and LCD connected
                         3
                         4     ORG 0000H
                         5     SJMP START
****ERROR:Labelistoofarfor8-bitrelativeaddressing.Trytodisablepeepholeoptimizationsiftheyareon.
                         6
                         7     ORG 0030H
                         8
                         9     ; LCD Commands and Functions
                        10     LCD_INIT:
                        11         MOV DPTR, #LCD_INIT_CMDS
                        12         MOV R0, #LCD_INIT_CMDS_LEN
****ERROR:Symbolnotdefined:lcd_init_cmds_len
                        13     LCD_INIT_LOOP:
                        14         MOVX A, @DPTR
                        15         ACALL LCD_CMD
                        16         INC DPTR
                        17         DJNZ R0, LCD_INIT_LOOP
                        18         RET
                        19
                        20     LCD_CMD:
                        21         MOV P2, A
                        22         CLR P3.0  ; RS = 0
                        23         SETB P3.1 ; EN = 1
                        24         ACALL DELAY
                        25         CLR P3.1  ; EN = 0
                        26         RET
                        27
                        28     LCD_DATA:
                        29         MOV P2, A
                        30         SETB P3.0 ; RS = 1
                        31         SETB P3.1 ; EN = 1
                        32         ACALL DELAY
                        33         CLR P3.1  ; EN = 0
                        34         RET
                        35
                        36     LCD_STRING:
                        37         MOV R1, DPL
                        38         MOV R2, DPH
                        39         LCD_STRING_LOOP:
                        40             MOVX A, @DPTR
                        41             JZ LCD_STRING_END
                        42             ACALL LCD_DATA
                        43             INC DPTR
                        44             SJMP LCD_STRING_LOOP
                        45         LCD_STRING_END:
                        46             RET
                        47
                        48     LCD_CLEAR:
                        49         MOV A, #01H
                        50         ACALL LCD_CMD
                        51         ACALL DELAY
                        52         RET
                        53
                        54     ; UART Initialization and Functions
                        55     UART_INIT:
                        56         MOV TMOD, #20H ; Timer1 Mode 2
                        57         MOV TH1, #0FDH ; 9600 baud rate
                        58         MOV SCON, #50H ; 8-bit UART, Mode 1
                        59         SETB TR1       ; Start Timer1
                        60         RET
                        61
                        62     UART_TX:
                        63         MOV SBUF, A
                        64     WAIT_TX:
                        65         JNB TI, WAIT_TX
                        66         CLR TI
                        67         RET
                        68
                        69     UART_RX:
                        70     WAIT_RX:
                        71         JNB RI, WAIT_RX
                        72         MOV A, SBUF
                        73         CLR RI
                        74         RET
                        75
                        76     UART_STRING:
                        77         MOV R1, DPL
                        78         MOV R2, DPH
                        79         UART_STRING_LOOP:
                        80             MOVX A, @DPTR
                        81             JZ UART_STRING_END
                        82             ACALL UART_TX
                        83             INC DPTR
                        84             SJMP UART_STRING_LOOP
                        85         UART_STRING_END:
                        86             RET
                        87
                        88     DELAY:
                        89         MOV R3, #250
                        90     DELAY_LOOP1:
                        91         MOV R4, #250
                        92     DELAY_LOOP2:
                        93         DJNZ R4, DELAY_LOOP2
                        94         DJNZ R3, DELAY_LOOP1
                        95         RET
                        96
                        97     START:
                        98         MOV SP, #60H  ; Set stack pointer
                        99         ACALL UART_INIT
                       100         ACALL LCD_INIT
                       101
                       102         ; Seed random number generator (simplified)
                       103         MOV DPTR, #0FE00H
                       104         MOV A, #55H
                       105         MOVX @DPTR, A
                       106
                       107         ; Generate random number between 0 and 99
                       108         ACALL RAND
                       109         MOV R7, A ; Store random number in R7
                       110
                       111         ; Send initial message
                       112         MOV DPTR, #MSG_PROMPT
                       113         ACALL UART_STRING
                       114
                       115         MOV DPTR, #MSG_GUESS
                       116         ACALL LCD_STRING
                       117
                       118         GUESS_LOOP:
                       119             ACALL UART_RX
                       120             MOV B, A
                       121             ACALL UART_RX
                       122             MOV A, B
                       123             SUBB A, #'0'
                       124             MOV B, A
                       125             MOV A, B
                       126             ACALL UART_TX
                       127             MOV A, B
                       128             MOV A, B
                       129             MOV B, #'0'
                       130             SUBB A, B
                       131             MOV B, A
                       132             ACALL UART_RX
                       133             MOV A, B
                       134             ACALL UART_TX
                       135             MOV A, B
                       136             SUBB A, #'0'
                       137             MOV B, A
                       138             MOV A, B
                       139             ACALL UART_TX
                       140             MOV A, B
                       141             MOV A, B
                       142             ADD A, #'0'
                       143             MOV B, A
                       144
                       145             MOV A, B
                       146             CJNE A, R7, CHECK_HIGH_LOW
****ERROR:Invalidsetofoperands:cjne224,R7,CHECK_HIGH_LOW
                       147             ; Correct guess
                       148             MOV DPTR, #MSG_CORRECT
                       149             ACALL UART_STRING
                       150             MOV DPTR, #MSG_CORRECT_LCD
                       151             ACALL LCD_STRING
                       152             SJMP END_GAME
                       153
                       154     CHECK_HIGH_LOW:
                       155             MOV A, B
                       156             SUBB A, R7
                       157             JC TOO_LOW
                       158
                       159     TOO_HIGH:
                       160             MOV DPTR, #MSG_HIGH
                       161             ACALL UART_STRING
                       162             MOV DPTR, #MSG_HIGH_LCD
                       163             ACALL LCD_STRING
                       164             SJMP GUESS_LOOP
                       165
                       166     TOO_LOW:
                       167             MOV DPTR, #MSG_LOW
                       168             ACALL UART_STRING
                       169             MOV DPTR, #MSG_LOW_LCD
                       170             ACALL LCD_STRING
                       171             SJMP GUESS_LOOP
                       172
                       173     END_GAME:
                       174         SJMP END_GAME ; Endlessly loop to stop program
                       175
                       176     RAND:
                       177         MOV DPTR, #0FE00H
                       178         MOVX A, @DPTR
                       179         CPL A
                       180         MOVX @DPTR, A
                       181         MOV B, #100
                       182         DIV AB
                       183         MOV A, B
                       184         RET
                       185
                       186     ; Data
011F 380C060100        187     LCD_INIT_CMDS: DB 38H, 0CH, 06H, 01H, 00H
                       188     LCD_INIT_CMDS_LEN EQU ($ - LCD_INIT_CMDS)
0124 4775657373        189     MSG_PROMPT: DB 'Guess a number between 0 and 99:', 0DH, 0AH, 00H
     2061206E75
     6D62657220
     6265747765
     656E203020
     616E642039
     393A0D0A00
0147 4775657373        190     MSG_GUESS: DB 'Guess a number:', 00H
     2061206E75
     6D6265723A
     00
0157 546F6F2068        191     MSG_HIGH: DB 'Too high!', 0DH, 0AH, 00H
     696768210D
     0A00
0163 546F6F206C        192     MSG_LOW: DB 'Too low!', 0DH, 0AH, 00H
     6F77210D0A
     00
016E 436F727265        193     MSG_CORRECT: DB 'Correct! You win!', 0DH, 0AH, 00H
     6374212059
     6F75207769
     6E210D0A00
0182 546F6F2068        194     MSG_HIGH_LCD: DB 'Too high!   ', 00H
     6967682120
     202000
018F 546F6F206C        195     MSG_LOW_LCD: DB 'Too low!    ', 00H
     6F77212020
     202000
019C 436F727265        196     MSG_CORRECT_LCD: DB 'Correct! You win!', 00H
     6374212059
     6F75207769
     6E2100
                       197
                       198     END
ASSEMBLY COMPLETE, NO ERRORS FOUND, 5 WARNINGS


ERROR SUMMARY:
Line 1, ERROR:Invalidexpression`($-LCD_INIT_CMDS)'
Line 2, ERROR:Valueof`$'isunknownatthispoint
Line 7, ERROR:Labelistoofarfor8-bitrelativeaddressing.Trytodisablepeepholeoptimizationsiftheyareon.
Line 15, ERROR:Symbolnotdefined:lcd_init_cmds_len
Line 150, ERROR:Invalidsetofoperands:cjne224,R7,CHECK_HIGH_LOW

SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CHECK_HIGH_LOW . . . . . . . . . . .  C  ADDR  00F3H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DELAY. . . . . . . . . . . . . . . .  C  ADDR  008FH
DELAY_LOOP1. . . . . . . . . . . . .  C  ADDR  0091H
DELAY_LOOP2. . . . . . . . . . . . .  C  ADDR  0093H
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
END_GAME . . . . . . . . . . . . . .  C  ADDR  0110H
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
GUESS_LOOP . . . . . . . . . . . . .  C  ADDR  00B2H
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
LCD_CLEAR. . . . . . . . . . . . . .  C  ADDR  005FH  NOT USED
LCD_CMD. . . . . . . . . . . . . . .  C  ADDR  003CH
LCD_DATA . . . . . . . . . . . . . .  C  ADDR  0047H
LCD_INIT . . . . . . . . . . . . . .  C  ADDR  0030H
LCD_INIT_CMDS. . . . . . . . . . . .  C  ADDR  011FH
LCD_INIT_LOOP. . . . . . . . . . . .  C  ADDR  0035H
LCD_STRING . . . . . . . . . . . . .  C  ADDR  0052H
LCD_STRING_END . . . . . . . . . . .  C  ADDR  005EH
LCD_STRING_LOOP. . . . . . . . . . .  C  ADDR  0056H
MSG_CORRECT. . . . . . . . . . . . .  C  ADDR  016EH
MSG_CORRECT_LCD. . . . . . . . . . .  C  ADDR  019CH
MSG_GUESS. . . . . . . . . . . . . .  C  ADDR  0147H
MSG_HIGH . . . . . . . . . . . . . .  C  ADDR  0157H
MSG_HIGH_LCD . . . . . . . . . . . .  C  ADDR  0182H
MSG_LOW. . . . . . . . . . . . . . .  C  ADDR  0163H
MSG_LOW_LCD. . . . . . . . . . . . .  C  ADDR  018FH
MSG_PROMPT . . . . . . . . . . . . .  C  ADDR  0124H
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H  NOT USED
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H  NOT USED
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RAND . . . . . . . . . . . . . . . .  C  ADDR  0112H
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
START. . . . . . . . . . . . . . . .  C  ADDR  0098H
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H
TOO_HIGH . . . . . . . . . . . . . .  C  ADDR  00F8H  NOT USED
TOO_LOW. . . . . . . . . . . . . . .  C  ADDR  0104H
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
UART_INIT. . . . . . . . . . . . . .  C  ADDR  0066H
UART_RX. . . . . . . . . . . . . . .  C  ADDR  007AH
UART_STRING. . . . . . . . . . . . .  C  ADDR  0082H
UART_STRING_END. . . . . . . . . . .  C  ADDR  008EH
UART_STRING_LOOP . . . . . . . . . .  C  ADDR  0086H
UART_TX. . . . . . . . . . . . . . .  C  ADDR  0072H
WAIT_RX. . . . . . . . . . . . . . .  C  ADDR  007AH
WAIT_TX. . . . . . . . . . . . . . .  C  ADDR  0074H
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED